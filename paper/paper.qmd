---
title: "Do music charts still matter in the streaming age? An analysis predicting Beyoncé’s Spotify numbers using a regression model."
author: Tam Ly
thanks: "Code and data are available at: [https://github.com/atn-ly/beyonce](https://github.com/atn-ly/beyonce)"
date: today
date-format: long
abstract: "Music charts are a powerful marketing tool. This paper analyzes the number of Spotify streams of a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100* utilizing data collected from Spotify and Billboard. In our negative binomial regression model, we find that the number of Spotify streams of a Beyoncé song increases as its duration on the *Billboard Hot 100* increases. Our discovery highlights the relevance of charts in shaping today’s music business industry."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| message: false
#| warning: false

library(arrow)
library(broom.mixed)
library(ggplot2)
library(here)
library(knitr)
library(marginaleffects)
library(modelsummary)
library(rstanarm)
library(tidyverse)

#Read in data
beyonce_cleaned = read_parquet(
  file = here("data/analysis_data/beyonce_cleaned.parquet"),
  show_col_types = FALSE
)

#Read in model
beyonce_pois <- readRDS(file = here::here("models/beyonce_pois.rds"))
beyonce_nbinom <- readRDS(file = here::here("models/beyonce_nbinom.rds"))
beyonce_nbinom_default <- readRDS(file = here::here("models/beyonce_nbinom_default.rds"))
```


# Introduction

Beyoncé Giselle Knowles-Carter is a singer, songwriter, producer, dancer, and one of the most successful and influential artists of our time. Over the course of her career, she has won 32 Grammy Awards, sold beyond 200 million records, and more than 100 of her songs have landed on the *Billboard Hot 100* chart [@sony]. The *Billboard Hot 100* is a music ranking system that is supposed to showcase 100 of the most popular songs in the United States each week [@substack]. Listeners can stream these hits on Spotify, the world’s most popular audio streaming subscription service [@aboutspotify].

There is a clear gap in knowing what makes a song famous. In the ever-changing music industry, it is not only about melody and lyrics, but also promotion. In this paper, we focus on music promotion and the importance of Billboard charting as a marketing tool. We analyze the number of Spotify streams of a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*. The estimand is the popularity of a Beyoncé song and this is considered in the number of Spotify streams.

We are consequently able to answer the following question: What is the effect of longevity on the Billboard charts on a Beyoncé song’s number of Spotify streams? Using data collected from Spotify and Billboard and a negative binomial regression model, we found that the number of Spotify streams of a Beyoncé song increases as its duration on the *Billboard Hot 100* increases. We deduce that Billboard charting is still important for an artists’ popularity and career.

The rest of this paper is structured as follows. @sec-data provides the sources, measurement, methodology, and variables of the dataset. @sec-model provides the model set-up and justification. @sec-results provides the results of the model and @sec-discussion provides a discussion of the results.


# Data {#sec-data}

## Sources

The dataset used in this paper was created using data gathered from Spotify [@spotify] and Billboard [@billboard]. The data was collected by the authors for the purpose of this paper to investigate the number of Spotify streams of a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*. Song titles, album titles, and the number of Spotify streams were collected from Spotify, while weeks spent on the *Billboard Hot 100* were collected from Billboard. There were no similar datasets available that could have been used.

## Measurement

First, we used Spotify to collect data on Beyoncé albums. Here, we had to decide which albums to include in our dataset since Beyoncé has 15 different albums in her Spotify discography. We decided to only include her eight studio albums and one soundtrack album and exclude her live albums and compilation albums because these did not chart. Furthermore, among her eight studio albums, we only looked at the deluxe versions, since these contain the same songs with the same streaming numbers as the standard version along with some additional tracks.

Next, using Spotify, we collected data on Beyoncé songs from the nine albums we selected and had to decide which types of tracks to include. Since we are interested in songs that charted, we decided to exclude remixes, extended mixes, Spanish versions, interludes, and original demos that were included in her albums because these are not as popular. Note that we also did not include songs where Beyoncé was a guest feature on another artist’s song.

Then, we used Spotify to collect data on the number of streams for the songs that we selected. Spotify gives one stream to a track if it is played for at least 30 seconds and updates its streaming numbers once a day at approximately 3 PM EST. We collected this data on April 12, 2024 after 3 PM EST.

Lastly, we collected data on the number of weeks each song spent on the *Billboard Hot 100* from Billboard. Billboard keeps a chart history for Beyoncé that includes the debut date, peak position, peak date, and weeks spent for each song that charted on the *Billboard Hot 100*. From this list, we only collected the number of weeks spent on the chart for our selected songs. Billboard updates the *Billboard Hot 100* as well as the artist’s chart history every Tuesday. We collected this data on Friday, April 12, 2024. For songs that did not chart, we recorded them with a 0 in our dataset.

## Methodology

We analyzed the data in R [@citeR] using the following packages: `arrow` [@arrow], `broom.mixed` [@broommixed], `ggplot2` [@ggplot2], `here` [@here], `janitor` [@janitor], `knitr` [@knitr], `marginaleffects` [@marginaleffects], `modelsummary` [@modelsummary], `rstanarm` [@rstanarm], and `tidyverse` [@tidyverse].

## Variables

There are 4 variables in the dataset that we created:

1. `song` which represents the song titles,
2. `album` which represents the album titles,
3. `spotify_streams` which represents the number of Spotify streams, and
4. `wks_on_chart` which represents the number of weeks spent on the *Billboard Hot 100*.

To visualize our data, we create a table and graph. @tbl-variables shows a sample of the dataset with all the variables and the first 5 out of 140 observations. Furthermore, @fig-variables show a scatterplot of the data with all 140 observations. We see a positive correlation between the number of Spotify streams and weeks spent on the *Billboard Hot 100*.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: tbl-variables
#| tbl-cap: "Sample of the cleaned dataset with the first 5 observations"

beyonce_cleaned |>
  slice(1:5) |>
  kable(
    col.names = c("Song", "Album", "Spotify Streams", "Weeks on Chart")
  )
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-variables
#| fig-cap: "Relationship between the number of Spotify streams and weeks spent on the *Billboard Hot 100* for Beyoncé songs"

beyonce_cleaned |>
  ggplot(mapping = aes(x = wks_on_chart, y = spotify_streams, color = fct_inorder(album))) +
  geom_point(alpha = 0.5) +
  theme_minimal() +
  labs(x = "Weeks on Chart", y = "Spotify Streams", color = "Album")
```

# Model {#sec-model}

The goal of our modeling strategy is to predict the number of Spotify streams of a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*. We used a negative binomial regression model in a Bayesian framework. Negative binomial regression is a type of generalized linear model that is useful for modeling count data.

## Model set-up

The model that we are interested in is:

\begin{align} 
y_i|\mu_i,r &\sim \mbox{NegBinom}(\mu_i, r) \\
\mbox{log}(\mu_i) &= \alpha + \beta \times \mbox{Number of weeks}_i \\
\alpha &\sim \mbox{Normal}(18, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\end{align}

Where:

* $y_i$ is the outcome variable, representing the number of Spotify streams for song $i$,
* $\mu_i$ is a parameter for the negative binomial distribution, representing the probability of success in a single trial,
* $r$ is a parameter for the negative binomial distribution, representing the number of successes,
* $\mbox{Number of weeks}_i$ is the predictor variable, representing the number of weeks spent on the Billboard Hot 100 for song $i$,
* $\alpha$ is a parameter, representing the intercept with a specified prior probability distribution that is Normal with a mean of 18 and standard deviation of 2.5, and 
* $\beta$ is a parameter, representing the slope coefficient with a default prior probability distribution that is Normal with a mean of 0 and standard deviation of 2.5.

## Model justification

We expect a positive relationship between the number of Spotify streams and weeks spent on the *Billboard Hot 100* based on the positive correlation in the scatterplot graph that we observed in @sec-data. 

Negative binomial regression operates under several assumptions. It assumes linearity between the outcome and predictor variables, independence of observations, and no multicollinearity [@negativebinomial]. 

We considered Poisson regression as an alternative model since it is also used for count data. However, one of the restrictions with Poisson regression is that it assumes equal mean and variance. Negative binomial regression relaxes this assumption to allow for over-dispersion. We fitted both and compared them using posterior predictive checks in @fig-modelcomparison. We see that the negative binomial approach does a better job of fitting the data.

We implemented additional model checking and diagnostic issues. Details and graphs can be found in @sec-model-details.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-modelcomparison
#| layout-ncol: 2
#| fig-cap: "Comparing posterior prediction checks for Poisson and negative binomial models"
#| fig-subcap: ["Poisson model", "Negative binomial model"]

pp_check(beyonce_pois) +
  theme(legend.position = "bottom")

pp_check(beyonce_nbinom) +
  theme(legend.position = "bottom")
```


# Results {#sec-results}

@tbl-results demonstrates what was expected: the positive number 0.094 means that there is a positive relationship between the number of Spotify streams of a Beyoncé song and the number of weeks it spent on the *Billboard Hot 100*. @fig-results further illustrates this and makes it clear that we expect a positive relationship.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: tbl-results
#| tbl-cap: "Examining the number of Spotify streams for a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*"

modelsummary(
  list(
    "Spotify Streams" = beyonce_nbinom
  )
)
```

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-results
#| fig-cap: "The predicted number of Spotify streams for a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*"

plot_predictions(beyonce_nbinom, condition = "wks_on_chart") +
  labs(x = "Weeks on Chart",
       y = "Spotify Streams") +
  theme_classic()
```


# Discussion {#sec-discussion}

## Findings

In this paper, we collected and visualized data from Spotify and Billboard as discussed in @sec-data. Then, we used a Bayesian negative binomial regression model as seen in @sec-model to predict the number of Spotify streams of a Beyoncé song based on the number of weeks it spent on the *Billboard Hot 100*. Following our analysis in @sec-results, we found that the number of Spotify streams of a Beyoncé song increased as its duration on the *Billboard Hot 100* increased. We will now discuss the historical context behind Billboard and why huge superstars, such as Beyoncé, still care about charting.

## A bit of history

In the 1940s, Billboard started developing music charts to try and determine the most popular song [@substack]. This was to help inform people in the music industry, including record stores and jukebox operators, about which records to order [@substack]. The *Billboard Hot 100* was created in 1958 and has undergone complete upheavals since its inception [@substack]. How exactly does Billboard determine the most popular song? This has always been the subject of much controversy due to its biased survey methods. Billboard first measured sales by surveying record stores, although it was impossible to know if the store clerks were lying or not [@substack]. Then, co-founder of Casablanca Records, Larry Harris, alleged that industry insiders had heavy influence over the charts [@substack]. In the 1990s, Billboard began tracking sales based on barcode scans and hip-hop sales seemingly rose dramatically overnight [@substack]. 

Charts are supposed to reflect the industry’s reality and in 2018, it was announced that the *Billboard Hot 100* would take streaming data into account [@substack]. However, the exact formula behind Billboard’s calculations remains unknown to the public. We only know that one stream does not necessarily equal one sale and that some streams, such as for on demand services and from paid-tier users, count more than others [@substack]. By the 2010s, the question of what the Billboard charts actually reflect became even more prevalent after fans proved that it was susceptible to coordinated manipulation [@substack].

## Why charts still matter

Do artists as big as Beyoncé still care about music charts? Chart success can bring significant music promotion to an artist’s career. Songs that land on the *Billboard Hot 100* also land on Spotify’s biggest playlists, such as Today’s Top Hits which has almost 35 million followers [@todaystophits]. Cherie Hu, a music industry analyst at the intersection of music and data, has deemed playlists “the new album” and “more powerful than radio” as a placement on Today’s Top Hits can bring up to $163,000 in additional revenue per track [@cherie]. Moreover, for new artists, high positions in the charts can lead to more ownership and creative control in their musical career. This can help explain the importance of why many of Beyoncé’s longest charting songs come from her earlier albums. For more established artists who have a loyal fanbase, charting is essential for maintaining their brand and curtailing any image of a decline. 

## Weaknesses and next steps

Some weaknesses become apparent in our approach in using Spotify streams as a metric for the popularity of a Beyoncé song. First, one of Beyoncé’s albums, *Lemonade*, was added to Spotify three years after its release. This means that the number of Spotify streams for the songs from this album are underrepresented in our dataset. Furthermore, Spotify numbers are also not immune to industry politics that underlie promotional mechanics. All of the major record labels own a sizable share of Spotify and can give some artists preferential treatment on the platform. For example, Beyoncé is under Sony Music which owns a 2.65% stake in Spotify [@owners]. Lastly, we did not consider that Beyoncé’s older songs have had more time to accumulate streams than her latest work. For instance, *COWBOY CARTER* was just released on March 29, 2024 while *Dangerously in Love* was released on June 20, 2003 [@spotify].

In the future, it could be on interest to run the analysis again to give Beyoncé’s latest album, *COWBOY CARTER*, more time to see how long it lasts on the chart. We could also standardize the length to accumulate streams such as one year after its release for consistency. Another possible idea for future work could be to use a mix of new and established artists to see if we get the same result.


\newpage

\appendix

# Appendix {-}

# Model details {#sec-model-details}

## Posterior predictive check

We compare the posterior with the prior. @fig-posteriorvsprior-1 suggests that there is an issue with the default prior we specified for $\alpha$. Our re-specified model in @fig-posteriorvsprior-2 shows that it does a better job of fitting the data.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-posteriorvsprior
#| fig-cap: "Comparing the posterior with the prior"
#| fig-subcap: ["Default priors", "Re-specified priors"]
#| layout-ncol: 2

posterior_vs_prior(beyonce_nbinom_default) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()

posterior_vs_prior(beyonce_nbinom) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-diagnostics-1 is a trace plot and it shows that there are no horizontal lines that appear to bounce around and have a nice overlap between the chains. @fig-diagnostics-2 is a Rhat plot and it shows that everything is close to 1 and no more than 1.1. This suggests that there are no problems in both.

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-diagnostics
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(beyonce_nbinom, "trace")

plot(beyonce_nbinom, "rhat")
```


\newpage

# References
